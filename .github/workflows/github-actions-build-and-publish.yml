name: Build and publish

on:
  push:
    branches: [ main ]

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt install -y dotnet6
      - run: sudo locale-gen sl_SI.UTF-8 && sudo update-locale LANG=sl_SI.UTF-8
      - run: wget https://github.com/Tyrrrz/DiscordChatExporter/releases/download/2.36.4/DiscordChatExporter.Cli.zip && unzip DiscordChatExporter.Cli.zip
      - run: mkdir data
      - run: sudo dotnet DiscordChatExporter.Cli.dll export -t ${{ secrets.DISCORD_TOKEN }} -c ${{ secrets.DISCORD_CHANNEL_ID }} -f json --filter "from:${{ secrets.DISCORD_USER }} poop" --after $(python3 .github/scripts/prev_month.py) --before $(python3 .github/scripts/prev_month.py --last) -o data
      - run: sudo python3 .github/scripts/convert.py -d data
      - uses: actions/upload-artifact@v3
        with:
          name: data
          path: data/*.csv

  # Build job
  build:
    needs: export
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: mkdir data
      - uses: actions/download-artifact@v3
        with:
          name: data
          path: data
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn
      - run: yarn build
      - uses: actions/upload-pages-artifact@v1
        with:
          path: build

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
